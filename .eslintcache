[{"C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\index.tsx":"1","C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\redux\\sagas.ts":"2","C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\redux\\pokemons\\reducers.ts":"3","C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\redux\\pokemons\\sagas.ts":"4","C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\redux\\pokemons\\actions.ts":"5","C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\helpers\\utils.js":"6","C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\redux\\reducers.ts":"7","C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\reportWebVitals.ts":"8","C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\router.tsx":"9","C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\view\\pages\\error\\404.tsx":"10","C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\view\\components\\pokemons\\ListCard.tsx":"11","C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\view\\components\\main\\TopBar.tsx":"12","C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\redux\\settings\\actions.ts":"13","C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\redux\\settings\\reducers.ts":"14","C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\api\\GenericModel.ts":"15","C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\api\\Pokemon.ts":"16","C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\view\\components\\main\\BottomBar.tsx":"17","C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\view\\pages\\pokemons\\index.tsx":"18","C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\view\\components\\pokemons\\DetailsCard.tsx":"19"},{"size":1665,"mtime":1611514217201,"results":"20","hashOfConfig":"21"},{"size":161,"mtime":1611514217214,"results":"22","hashOfConfig":"21"},{"size":673,"mtime":1611586341844,"results":"23","hashOfConfig":"21"},{"size":2682,"mtime":1611588623601,"results":"24","hashOfConfig":"21"},{"size":307,"mtime":1611588529694,"results":"25","hashOfConfig":"21"},{"size":1675,"mtime":1611514217199,"results":"26","hashOfConfig":"21"},{"size":361,"mtime":1611514217207,"results":"27","hashOfConfig":"21"},{"size":425,"mtime":1611418075180,"results":"28","hashOfConfig":"21"},{"size":1412,"mtime":1611582209422,"results":"29","hashOfConfig":"21"},{"size":175,"mtime":1611418550131,"results":"30","hashOfConfig":"21"},{"size":2426,"mtime":1611586946007,"results":"31","hashOfConfig":"21"},{"size":1730,"mtime":1611588102879,"results":"32","hashOfConfig":"21"},{"size":185,"mtime":1611424539302,"results":"33","hashOfConfig":"21"},{"size":804,"mtime":1611587902833,"results":"34","hashOfConfig":"21"},{"size":603,"mtime":1611530691299,"results":"35","hashOfConfig":"21"},{"size":216,"mtime":1611514217196,"results":"36","hashOfConfig":"21"},{"size":2974,"mtime":1611588819409,"results":"37","hashOfConfig":"21"},{"size":4410,"mtime":1611589325074,"results":"38","hashOfConfig":"21"},{"size":2437,"mtime":1611586500144,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"1c9q8x5",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"43"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},"C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\index.tsx",["85"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { createHashHistory, History } from \"history\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport { routerMiddleware } from \"connected-react-router\";\r\nimport \"./index.css\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport sagas from \"./redux/sagas\";\r\nimport reducers from \"./redux/reducers\";\r\nimport Router from \"./router\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nconst history: History = createHashHistory();\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst routeMiddleware = routerMiddleware(history);\r\nconst middlewares = [sagaMiddleware, routeMiddleware];\r\n// if (process.env.NODE_ENV === 'development') {\r\n//   middlewares.push(logger)\r\n// }\r\nconst store = createStore(\r\n  reducers(history),\r\n  compose(applyMiddleware(...middlewares))\r\n);\r\nsagaMiddleware.run(sagas);\r\n\r\nconst windowResize = () => {\r\n  return;\r\n};\r\n\r\nwindow.addEventListener(\"resize\", () =>\r\n  store.dispatch({\r\n    type: \"settings/SET_STATE\",\r\n    payload: {\r\n      screenWidth: window.innerWidth,\r\n      screenHeight: window.innerHeight,\r\n    },\r\n  })\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router history={history} />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\nexport { store, history };\r\n",["86","87"],"C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\redux\\sagas.ts",[],"C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\redux\\pokemons\\reducers.ts",[],"C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\redux\\pokemons\\sagas.ts",[],"C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\redux\\pokemons\\actions.ts",[],"C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\helpers\\utils.js",["88","89"],"C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\redux\\reducers.ts",["90"],"import { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\nimport {History} from 'history';\r\nimport pokemons from './pokemons/reducers';\r\nimport settings from './settings/reducers';\r\n\r\nexport default ( history: History ) =>\r\n  combineReducers( {\r\n    router: connectRouter( history ),\r\n    pokemons,\r\n    settings,\r\n  } )","C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\reportWebVitals.ts",[],"C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\router.tsx",[],"C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\view\\pages\\error\\404.tsx",[],"C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\view\\components\\pokemons\\ListCard.tsx",["91","92","93"],"import { useState } from \"react\";\r\nimport { Card } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\n\r\ntype Props = {\r\n  pokemon: any;\r\n  index: number;\r\n  dispatch: any;\r\n  pokemons: any;\r\n};\r\n\r\nconst MapStateToProps = ({ pokemons }) => ({ pokemons });\r\n\r\nconst ListCard = (props: Props) => {\r\n  const { pokemon, index, dispatch, pokemons } = props;\r\n  let name = pokemon.name;\r\n  name = name\r\n    .split(\"-\")\r\n    .map((subName) => {\r\n      return subName.charAt(0).toUpperCase() + subName.slice(1);\r\n    })\r\n    .join(\" \");\r\n  const URLArray = pokemon.url.split(\"/\");\r\n  const selectedPokemonId = URLArray[URLArray.length - 2];\r\n  const [hover, setHover] = useState(false);\r\n\r\n  return (\r\n    <div\r\n      onMouseEnter={() => setHover(true)}\r\n      onMouseLeave={() => setHover(false)}\r\n      onClick={() => {\r\n        dispatch({\r\n          type: \"pokemons/SET_STATE\",\r\n          payload: { selectedPokemon: null },\r\n        });\r\n        dispatch({\r\n          type: \"pokemons/SET_STATE\",\r\n          payload: { selectedPokemonId },\r\n        });\r\n        dispatch({ type: \"pokemons/LOAD_SELECTED\" });\r\n      }}\r\n      title={\"Pok√©mon No. \" + selectedPokemonId}\r\n      style={{\r\n        cursor: \"pointer\",\r\n        width: \"100%\",\r\n        padding: 20,\r\n        backgroundColor:\r\n          pokemons.selectedPokemonId === selectedPokemonId\r\n            ? \"#FFCB05\"\r\n            : hover\r\n            ? \"#E1E2E1\"\r\n            : \"white\",\r\n        borderRadius: 3,\r\n        marginBottom: 15,\r\n        display: \"flex\",\r\n      }}\r\n    >\r\n      <div style={{ height: \"100%\", backgroundColor: \"#F0F0F0\" }}>\r\n        <img\r\n          src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${selectedPokemonId}.png`}\r\n          className=\"img-fluid\"\r\n          style={{\r\n            borderRightStyle: \"solid\",\r\n            borderBottomStyle: \"solid\",\r\n            borderWidth: 2,\r\n            minHeight: 100,\r\n            minWidth: 100,\r\n            borderColor: \"lightgray\",\r\n          }}\r\n        />\r\n      </div>\r\n      <div\r\n        style={{\r\n          paddingLeft: 10,\r\n          float: \"left\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <div>\r\n          <b>Id:</b> {selectedPokemonId}\r\n        </div>\r\n        <div>\r\n          <b>Name:</b> {name}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(MapStateToProps)(ListCard);\r\n","C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\view\\components\\main\\TopBar.tsx",["94","95","96"],"import { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button } from \"antd\";\r\n\r\nconst MapStateToProps = ({ settings }) => ({ settings });\r\n\r\nconst TopBar = ({ settings, dispatch }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        width: \"100%\",\r\n        height: 250,\r\n        backgroundColor: \"#6F88D9\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          flex: 1,\r\n          width: \"100%\",\r\n          alignItems: \"center\",\r\n          paddingTop: 10,\r\n          paddingBottom: 10,\r\n        }}\r\n      >\r\n        <img\r\n          src=\"resources/pokemon-logo.png\"\r\n          className=\"App-logo\"\r\n          alt=\"logo\"\r\n          style={{ width: 400, height: 180 }}\r\n        />\r\n      </div>\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          height: 50,\r\n          backgroundColor: \"#003D80\",\r\n          display: \"flex\",\r\n        }}\r\n      >\r\n        <div\r\n          onClick={async () => {\r\n            dispatch({\r\n              type: \"settings/SET_STATE\",\r\n              payload: { page: \"pokemon\", search: false },\r\n            });\r\n          }}\r\n          style={{\r\n            cursor: \"pointer\",\r\n            marginLeft: 20,\r\n            display: \"flex\",\r\n            height: \"100%\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: 100,\r\n            backgroundColor: settings.page == \"pokemon\" ? \"#3367B0\" : \"#003D80\",\r\n            color: \"white\",\r\n          }}\r\n        >\r\n          <b>Pok√©mons</b>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(MapStateToProps)(TopBar);\r\n","C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\redux\\settings\\actions.ts",[],"C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\redux\\settings\\reducers.ts",[],"C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\api\\GenericModel.ts",[],"C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\api\\Pokemon.ts",["97"],"C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\view\\components\\main\\BottomBar.tsx",["98","99"],"import ReactDOM from \"react-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button } from \"antd\";\r\n\r\nconst MapStateToProps = ({ settings, pokemons }) => ({ settings, pokemons });\r\n\r\nconst BottomBar = ({ settings, pokemons, dispatch, lastPage }) => {\r\n  let firstPageToSelect: number =\r\n    settings.selectedSubpage - 5 > 1\r\n      ? settings.selectedSubpage - 5 < lastPage - 9\r\n        ? settings.selectedSubpage - 5\r\n        : lastPage - 9\r\n      : 1;\r\n  let pageButtons: any = [];\r\n  for (let i = firstPageToSelect; i < firstPageToSelect + 10; i++) {\r\n    pageButtons.push(\r\n      <Button\r\n        onClick={async () => {\r\n          dispatch({\r\n            type: \"settings/SET_STATE\",\r\n            payload: { selectedSubpage: i, search: false },\r\n          });\r\n          dispatch({ type: \"pokemons/LOAD_PAGED_POKEMONS\" });\r\n        }}\r\n        key={i}\r\n        style={{\r\n          height: 40,\r\n          padding: 10,\r\n          width: 40,\r\n          backgroundColor:\r\n            settings.selectedSubpage == i ? \"#FFCB05\" : \"#E1E2E1\",\r\n        }}\r\n      >\r\n        {i}\r\n      </Button>\r\n    );\r\n  }\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        width: \"100%\",\r\n        backgroundColor: \"#003D80\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          flex: 1,\r\n          justifyContent: \"center\",\r\n          paddingTop: 10,\r\n          height: 60,\r\n          display: \"flex\",\r\n        }}\r\n      >\r\n        {settings.search ? null : (\r\n          <div>\r\n            <Button\r\n              onClick={async () => {\r\n                dispatch({\r\n                  type: \"settings/SET_STATE\",\r\n                  payload: { selectedSubpage: 1, search: false },\r\n                });\r\n                dispatch({ type: \"pokemons/LOAD_PAGED_POKEMONS\" });\r\n              }}\r\n              style={{\r\n                height: 40,\r\n                padding: 10,\r\n                paddingLeft: 10,\r\n                paddingRight: 10,\r\n                width: 40,\r\n                backgroundColor: \"#E1E2E1\",\r\n              }}\r\n            >\r\n              {`<<`}\r\n            </Button>\r\n            {pageButtons}\r\n            <Button\r\n              onClick={async () => {\r\n                dispatch({\r\n                  type: \"settings/SET_STATE\",\r\n                  payload: { selectedSubpage: lastPage, search: false },\r\n                });\r\n                dispatch({ type: \"pokemons/LOAD_PAGED_POKEMONS\" });\r\n              }}\r\n              style={{\r\n                height: 40,\r\n                padding: 10,\r\n                paddingLeft: 10,\r\n                paddingRight: 10,\r\n                width: 40,\r\n                backgroundColor: \"#E1E2E1\",\r\n              }}\r\n            >\r\n              {`>>`}\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {settings.screenWidth < 800 ? null : <div style={{ flex: 3 }} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(MapStateToProps)(BottomBar);\r\n","C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\view\\pages\\pokemons\\index.tsx",["100","101","102","103"],"C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\view\\components\\pokemons\\DetailsCard.tsx",["104"],"import { Card } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst MapStateToProps = ({ settings, pokemons }) => ({\r\n  settings,\r\n  pokemons,\r\n});\r\n\r\nconst emptyPokemon = {\r\n  name: \"\",\r\n  id: 0,\r\n  moves: [],\r\n  types: [],\r\n  sprites: { front_default: \"\" },\r\n};\r\n\r\nconst DetailsCard = ({ settings, pokemons }) => {\r\n  let selectedPokemon = pokemons.selectedPokemon\r\n    ? pokemons.selectedPokemon\r\n    : emptyPokemon;\r\n  let name = selectedPokemon.name;\r\n  name = name\r\n    .split(\"-\")\r\n    .map((subName) => {\r\n      return subName.charAt(0).toUpperCase() + subName.slice(1);\r\n    })\r\n    .join(\" \");\r\n  console.log(settings.screenWidth);\r\n  let pokemonNumber = pokemons.selectedPokemonId;\r\n  return (\r\n    <Card\r\n      title={\"Pok√©mon No. \" + pokemonNumber}\r\n      style={{ width: \"100%\", padding: 20 }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: settings.screenWidth > 1100 ? \"row\" : \"column\",\r\n        }}\r\n      >\r\n        <div style={{ flex: 1 }}>\r\n          <img\r\n            src={selectedPokemon.sprites.front_default}\r\n            className=\"img-fluid\"\r\n            style={{ backgroundColor: \"#E1E2E1\", width: 300, minWidth: 150 }}\r\n          />\r\n        </div>\r\n        <div style={{ flex: 3 }}>\r\n          <ul>\r\n            <li>\r\n              <b>Name:</b> {name} <br />\r\n            </li>\r\n            <li>\r\n              <b>Number: </b> {pokemonNumber} <br />\r\n            </li>\r\n            <li>\r\n              <b>Types:</b>\r\n              <ul>\r\n                {selectedPokemon.types.map((item) => {\r\n                  return <li>{item.type.name}</li>;\r\n                })}\r\n              </ul>\r\n            </li>\r\n            <li>\r\n              <b>Moves({selectedPokemon.moves.length}):</b>\r\n              <ul>\r\n                {selectedPokemon.moves.map((item, index) => {\r\n                  return (\r\n                    <li\r\n                      style={{\r\n                        width: settings.screenWidth > 1300 ? \"25%\" : \"100%\",\r\n                        display: \"block\",\r\n                        float: \"left\",\r\n                      }}\r\n                    >\r\n                      {index + 1}: {item.move.name}\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default connect(MapStateToProps)(DetailsCard);\r\n",{"ruleId":"105","severity":1,"message":"106","line":29,"column":7,"nodeType":"107","messageId":"108","endLine":29,"endColumn":19},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":52,"column":31,"nodeType":"115","messageId":"116","endLine":52,"endColumn":32,"suggestions":"117"},{"ruleId":"113","severity":1,"message":"114","line":52,"column":56,"nodeType":"115","messageId":"116","endLine":52,"endColumn":57,"suggestions":"118"},{"ruleId":"119","severity":1,"message":"120","line":7,"column":1,"nodeType":"121","endLine":12,"endColumn":6},{"ruleId":"105","severity":1,"message":"122","line":2,"column":10,"nodeType":"107","messageId":"108","endLine":2,"endColumn":14},{"ruleId":"105","severity":1,"message":"123","line":15,"column":20,"nodeType":"107","messageId":"108","endLine":15,"endColumn":25},{"ruleId":"124","severity":1,"message":"125","line":59,"column":9,"nodeType":"126","endLine":70,"endColumn":11},{"ruleId":"105","severity":1,"message":"127","line":1,"column":10,"nodeType":"107","messageId":"108","endLine":1,"endColumn":18},{"ruleId":"105","severity":1,"message":"128","line":3,"column":10,"nodeType":"107","messageId":"108","endLine":3,"endColumn":16},{"ruleId":"129","severity":1,"message":"130","line":59,"column":44,"nodeType":"131","messageId":"132","endLine":59,"endColumn":46},{"ruleId":"105","severity":1,"message":"133","line":1,"column":8,"nodeType":"107","messageId":"108","endLine":1,"endColumn":13},{"ruleId":"105","severity":1,"message":"134","line":1,"column":8,"nodeType":"107","messageId":"108","endLine":1,"endColumn":16},{"ruleId":"129","severity":1,"message":"130","line":31,"column":38,"nodeType":"131","messageId":"132","endLine":31,"endColumn":40},{"ruleId":"105","severity":1,"message":"135","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":23},{"ruleId":"105","severity":1,"message":"136","line":11,"column":9,"nodeType":"107","messageId":"108","endLine":11,"endColumn":15},{"ruleId":"129","severity":1,"message":"137","line":31,"column":21,"nodeType":"131","messageId":"132","endLine":31,"endColumn":23},{"ruleId":"129","severity":1,"message":"137","line":86,"column":44,"nodeType":"131","messageId":"132","endLine":86,"endColumn":46},{"ruleId":"124","severity":1,"message":"125","line":42,"column":11,"nodeType":"126","endLine":46,"endColumn":13},"@typescript-eslint/no-unused-vars","'windowResize' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["138"],"no-negated-in-lhs",["139"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["140","141"],["142","143"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Card' is defined but never used.","'index' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'Button' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'axios' is defined but never used.","'ReactDOM' is defined but never used.","'useRef' is defined but never used.","'Search' is assigned a value but never used.","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"messageId":"144","fix":"145","desc":"146"},{"messageId":"147","fix":"148","desc":"149"},{"messageId":"144","fix":"150","desc":"146"},{"messageId":"147","fix":"151","desc":"149"},"removeEscape",{"range":"152","text":"153"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"154","text":"155"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"156","text":"153"},{"range":"157","text":"155"},[1307,1308],"",[1307,1307],"\\",[1332,1333],[1332,1332]]