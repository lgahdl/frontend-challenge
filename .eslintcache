[{"C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\index.tsx":"1","C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\redux\\sagas.ts":"2","C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\redux\\pokemons\\reducers.ts":"3","C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\redux\\pokemons\\sagas.ts":"4","C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\redux\\pokemons\\actions.ts":"5","C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\helpers\\utils.js":"6","C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\redux\\reducers.ts":"7","C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\reportWebVitals.ts":"8","C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\router.tsx":"9","C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\view\\pages\\error\\404.tsx":"10","C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\view\\components\\pokemons\\ListCard.tsx":"11","C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\view\\components\\main\\TopBar.tsx":"12","C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\redux\\settings\\actions.ts":"13","C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\redux\\settings\\reducers.ts":"14","C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\api\\GenericModel.ts":"15","C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\api\\Pokemon.ts":"16","C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\view\\components\\main\\BottomBar.tsx":"17","C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\view\\pages\\pokemons\\index.tsx":"18","C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\view\\components\\pokemons\\DetailsCard.tsx":"19"},{"size":1665,"mtime":1611514217201,"results":"20","hashOfConfig":"21"},{"size":161,"mtime":1611424649901,"results":"22","hashOfConfig":"21"},{"size":614,"mtime":1611527163953,"results":"23","hashOfConfig":"21"},{"size":1758,"mtime":1611527215387,"results":"24","hashOfConfig":"21"},{"size":277,"mtime":1611527149055,"results":"25","hashOfConfig":"21"},{"size":1675,"mtime":1611514217199,"results":"26","hashOfConfig":"21"},{"size":361,"mtime":1611514217207,"results":"27","hashOfConfig":"21"},{"size":425,"mtime":1611418075180,"results":"28","hashOfConfig":"21"},{"size":1446,"mtime":1611514217222,"results":"29","hashOfConfig":"21"},{"size":175,"mtime":1611418550131,"results":"30","hashOfConfig":"21"},{"size":2197,"mtime":1611529579364,"results":"31","hashOfConfig":"21"},{"size":1473,"mtime":1611526760259,"results":"32","hashOfConfig":"21"},{"size":185,"mtime":1611424539302,"results":"33","hashOfConfig":"21"},{"size":716,"mtime":1611514217221,"results":"34","hashOfConfig":"21"},{"size":603,"mtime":1611530576068,"results":"35","hashOfConfig":"21"},{"size":216,"mtime":1611514217196,"results":"36","hashOfConfig":"21"},{"size":2612,"mtime":1611527616754,"results":"37","hashOfConfig":"21"},{"size":2497,"mtime":1611529721467,"results":"38","hashOfConfig":"21"},{"size":3070,"mtime":1611530299702,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1c9q8x5",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},"C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\index.tsx",["86"],"C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\redux\\sagas.ts",[],["87","88"],"C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\redux\\pokemons\\reducers.ts",[],"C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\redux\\pokemons\\sagas.ts",[],"C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\redux\\pokemons\\actions.ts",[],"C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\helpers\\utils.js",["89","90"],"export default class Utils {\r\n  static clone(obj) {\r\n    let copy;\r\n\r\n    // Handle the 3 simple types, and null or undefined\r\n    if (null == obj || \"object\" != typeof obj) return obj;\r\n\r\n    // Handle Date\r\n    if (obj instanceof Date) {\r\n      copy = new Date();\r\n      copy.setTime(obj.getTime());\r\n      return copy;\r\n    }\r\n\r\n    // Handle Array\r\n    if (obj instanceof Array) {\r\n      copy = [];\r\n      for (let i = 0, len = obj.length; i < len; i++) {\r\n        copy[i] = Utils.clone(obj[i]);\r\n      }\r\n      return copy;\r\n    }\r\n\r\n    // Handle Object\r\n    if (obj instanceof Object) {\r\n      copy = {};\r\n      for (let attr in obj) {\r\n        if (obj.hasOwnProperty(attr)) copy[attr] = Utils.clone(obj[attr]);\r\n      }\r\n      return copy;\r\n    }\r\n\r\n    throw new Error(\"Unable to copy obj! Its type isn't supported.\");\r\n  }\r\n\r\n  static serialize (obj, prefix) {\r\n    var str = [],\r\n      p;\r\n    for (p in obj) {\r\n      if (obj.hasOwnProperty(p)) {\r\n        var k = prefix ? prefix + \"[\" + p + \"]\" : p,\r\n          v = obj[p];\r\n        str.push((v !== null && typeof v === \"object\") ?\r\n          Utils.serialize(v, k) :\r\n          encodeURIComponent(k) + \"=\" + encodeURIComponent(v));\r\n      }\r\n    }\r\n    return str.join(\"&\");\r\n  }\r\n\r\n  static validateEmail(email) {\r\n    const pattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return pattern.test(String(email).toLowerCase());\r\n  }\r\n\r\n  static validatePassword(password) {\r\n    const pattern = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,20}$/;\r\n    return password && password.match(pattern);\r\n  }\r\n}\r\n","C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\redux\\reducers.ts",["91"],"C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\reportWebVitals.ts",[],"C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\router.tsx",["92"],"import React, { lazy, Suspense } from \"react\";\r\nimport { Route, Redirect, Switch} from \"react-router-dom\";\r\nimport { ConnectedRouter } from \"connected-react-router\";\r\nimport { connect } from \"react-redux\";\r\nimport {History} from 'history';\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/pokemons\",\r\n    Component: lazy(() => import(\"./view/pages/pokemons\")),\r\n    exact: true,\r\n  },\r\n  {\r\n    path: \"/auth/404\",\r\n    Component: lazy(() => import(\"./view/pages/error/404\")),\r\n    exact: true,\r\n  },\r\n];\r\n\r\nconst MapStateToProps = () => ({});\r\n\r\nconst Router = (props) => {\r\n  const {history} = props;\r\n  return (\r\n    <ConnectedRouter history={history}>\r\n      <Route\r\n        component={(state)=>(<Switch location={state.location}>\r\n            <Route path=\"/\" exact render={() => <Redirect to=\"/pokemons\" />} />\r\n            {routes.map(({ path, Component, exact }) => (\r\n              <Route\r\n                path={path}\r\n                key={path}\r\n                exact={exact}\r\n                render={() => {\r\n                  return (\r\n                    <Suspense\r\n                      fallback={null}\r\n                    >\r\n                      <Component/>\r\n                    </Suspense>\r\n                  );\r\n                }}\r\n              />\r\n            ))}\r\n            <Redirect to=\"/auth/404\" />\r\n          </Switch>)\r\n          }\r\n      />\r\n    </ConnectedRouter>\r\n  );\r\n};\r\n\r\nexport default connect(MapStateToProps)(Router);\r\n",["93","94"],"C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\view\\pages\\error\\404.tsx",[],"C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\view\\components\\pokemons\\ListCard.tsx",["95","96","97","98"],"import { Card } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\n\r\ntype Props = {\r\n  pokemon: any;\r\n  index: number;\r\n  dispatch: any;\r\n  pokemons: any;\r\n};\r\n\r\nconst MapStateToProps = ({ pokemons }) => ({ pokemons });\r\n\r\nconst ListCard = (props: Props) => {\r\n  const { pokemon, index, dispatch, pokemons } = props;\r\n  let name = pokemon.name.charAt(0).toUpperCase() + pokemon.name.slice(1);\r\n  name = name\r\n    .split(\"-\")\r\n    .map((subName) => {\r\n      return subName.charAt(0).toUpperCase() + subName.slice(1);\r\n    })\r\n    .join(\" \");\r\n  const URLArray = pokemon.url.split(\"/\");\r\n  const selectedPokemonId = URLArray[URLArray.length - 2];\r\n  if (selectedPokemonId == 1) {\r\n    console.log(pokemons.selectedPokemonId);\r\n  }\r\n  return (\r\n    <div\r\n      onClick={() => {\r\n        dispatch({\r\n          type: \"pokemons/SET_STATE\",\r\n          payload: { selectedPokemonId },\r\n        });\r\n        dispatch({ type: \"pokemons/LOAD_SELECTED\" });\r\n      }}\r\n      title={\"Pokémon No. \" + selectedPokemonId}\r\n      style={{\r\n        width: \"100%\",\r\n        padding: 20,\r\n        backgroundColor:\r\n          pokemons.selectedPokemonId === selectedPokemonId\r\n            ? \"#FFCB05\"\r\n            : \"white\",\r\n\r\n        borderRadius: 3,\r\n        marginBottom: 15,\r\n        display: \"flex\",\r\n      }}\r\n    >\r\n      <div style={{ height: \"100%\", backgroundColor: \"#F0F0F0\" }}>\r\n        <img\r\n          src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${selectedPokemonId}.png`}\r\n          className=\"img-fluid\"\r\n          style={{\r\n            borderRightStyle: \"solid\",\r\n            borderBottomStyle: \"solid\",\r\n            borderWidth: 2,\r\n            minHeight: 100,\r\n            minWidth: 100,\r\n            borderColor: \"lightgray\",\r\n          }}\r\n        />\r\n      </div>\r\n      <div\r\n        style={{\r\n          paddingLeft: 10,\r\n          float: \"left\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <div>\r\n          <b>Id:</b> {selectedPokemonId}\r\n        </div>\r\n        <div>\r\n          <b>Name:</b> {name}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(MapStateToProps)(ListCard);\r\n","C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\view\\components\\main\\TopBar.tsx",["99"],"import { connect } from \"react-redux\";\r\nimport { Button } from \"antd\";\r\n\r\nconst MapStateToProps = ({ settings }) => ({ settings });\r\n\r\nconst TopBar = ({ settings, dispatch }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        width: \"100%\",\r\n        height: 250,\r\n        backgroundColor: \"#6F88D9\"\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          flex: 1,\r\n          width: \"100%\",\r\n          alignItems: \"center\",\r\n          paddingTop: 20,\r\n        }}\r\n      >\r\n        <img\r\n          src=\"resources/pokemon-logo.png\"\r\n          className=\"App-logo\"\r\n          alt=\"logo\"\r\n          style={{ width: 400, height: 180 }}\r\n        />\r\n      </div>\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          height: 60,\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Button\r\n          onClick={async () => {\r\n            dispatch({\r\n              type: \"settings/SET_STATE\",\r\n              payload: { page: \"pokemon\" },\r\n            });\r\n          }}\r\n          style={{\r\n            height: 40,\r\n            padding: 10,\r\n            width: 100,\r\n            backgroundColor: settings.page == \"pokemon\" ? \"#FFCB05\" : \"#E1E2E1\",\r\n          }}\r\n        >\r\n          Pokémon\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(MapStateToProps)(TopBar);\r\n","C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\redux\\settings\\actions.ts",[],"C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\redux\\settings\\reducers.ts",[],"C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\api\\GenericModel.ts",[],"C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\api\\Pokemon.ts",["100"],"C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\view\\components\\main\\BottomBar.tsx",["101","102"],"import ReactDOM from \"react-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button } from \"antd\";\r\n\r\nconst MapStateToProps = ({ settings, pokemons }) => ({ settings, pokemons });\r\n\r\nconst BottomBar = ({\r\n  settings,\r\n  pokemons,\r\n  dispatch,\r\n  lastPage,\r\n}) => {\r\n  let firstPageToSelect: number =\r\n    settings.selectedSubpage - 5 > 1\r\n      ? settings.selectedSubpage - 5 < lastPage - 9\r\n        ? settings.selectedSubpage - 5\r\n        : lastPage - 9\r\n      : 1;\r\n  let pageButtons: any = [];\r\n  for (let i = firstPageToSelect; i < firstPageToSelect + 10; i++) {\r\n    pageButtons.push(\r\n      <Button\r\n        onClick={async () => {\r\n          dispatch({\r\n            type: \"settings/SET_STATE\",\r\n            payload: { selectedSubpage: i },\r\n          });\r\n          dispatch({ type: \"pokemons/LOAD_PAGED_POKEMONS\" });\r\n        }}\r\n        key={i}\r\n        style={{\r\n          height: 40,\r\n          padding: 10,\r\n          width: 40,\r\n          backgroundColor:\r\n            settings.selectedSubpage == i ? \"#FFCB05\" : \"#E1E2E1\",\r\n        }}\r\n      >\r\n        {i}\r\n      </Button>\r\n    );\r\n  }\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        width: \"100%\",\r\n        backgroundColor: \"#6F88D9\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          height: 60,\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Button\r\n          onClick={async () => {\r\n            dispatch({\r\n              type: \"settings/SET_STATE\",\r\n              payload: { selectedSubpage: 1 },\r\n            });\r\n            dispatch({ type: \"pokemons/LOAD_PAGED_POKEMONS\" });\r\n          }}\r\n          style={{\r\n            height: 40,\r\n            padding: 10,\r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n            width: 40,\r\n            backgroundColor: \"#E1E2E1\",\r\n          }}\r\n        >\r\n          {`<<`}\r\n        </Button>\r\n        {pageButtons}\r\n        <Button\r\n          onClick={async () => {\r\n            dispatch({\r\n              type: \"settings/SET_STATE\",\r\n              payload: { selectedSubpage: lastPage },\r\n            });\r\n            dispatch({ type: \"pokemons/LOAD_PAGED_POKEMONS\" });\r\n          }}\r\n          style={{\r\n            height: 40,\r\n            padding: 10,\r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n            width: 40,\r\n            backgroundColor: \"#E1E2E1\",\r\n          }}\r\n        >\r\n          {`>>`}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(MapStateToProps)(BottomBar);\r\n","C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\view\\pages\\pokemons\\index.tsx",["103","104"],"C:\\Users\\luizg\\Documents\\frontend-challenge\\src\\view\\components\\pokemons\\DetailsCard.tsx",["105"],"import { Card } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst MapStateToProps = ({ settings, pokemons }) => ({\r\n  settings,\r\n  pokemons,\r\n});\r\n\r\nconst emptyPokemon = {\r\n  name: \"\",\r\n  id: 0,\r\n  moves: [],\r\n  types: [],\r\n  sprites: { front_default: \"\" },\r\n};\r\n\r\nconst DetailsCard = ({ settings, pokemons }) => {\r\n  let selectedPokemon = pokemons.selectedPokemon\r\n    ? pokemons.selectedPokemon\r\n    : emptyPokemon;\r\n  let name =\r\n    selectedPokemon.name.charAt(0).toUpperCase() +\r\n    selectedPokemon.name.slice(1);\r\n  name = name\r\n    .split(\"-\")\r\n    .map((subName) => {\r\n      return subName.charAt(0).toUpperCase() + subName.slice(1);\r\n    })\r\n    .join(\" \");\r\n  console.log(settings.screenWidth);\r\n  let pokemonNumber = pokemons.selectedPokemonId;\r\n  return (\r\n    <Card\r\n      title={\"Pokémon No. \" + pokemonNumber}\r\n      style={{ width: \"100%\", padding: 20 }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: settings.screenWidth > 1100 ? \"row\" : \"column\",\r\n        }}\r\n      >\r\n        <div style={{ flex: 1, paddingTop: 20, paddingLeft: 20 }}>\r\n          <img\r\n            src={selectedPokemon.sprites.front_default}\r\n            className=\"img-fluid\"\r\n            style={{ backgroundColor: \"#E1E2E1\", width: 300, minWidth: 150 }}\r\n          />\r\n        </div>\r\n        <div style={{ flex: 3, paddingTop: 20, paddingLeft: 20 }}>\r\n          <ul className=\"list-group\">\r\n            <div style={{ paddingBottom: 10 }}>\r\n              <b>Name</b>\r\n            </div>\r\n            <li className=\"list-group-item\">\r\n              {name} <br />\r\n            </li>\r\n            <div style={{ paddingBottom: 10, paddingTop: 10 }}>\r\n              <b>Number </b>\r\n            </div>\r\n            <li className=\"list-group-item\">\r\n              {pokemonNumber} <br />\r\n            </li>\r\n            <div style={{ paddingBottom: 10, paddingTop: 10 }}>\r\n              <b>Types</b>\r\n            </div>\r\n            {selectedPokemon.types.map((item) => {\r\n              return <li className=\"list-group-item\">{item.type.name}</li>;\r\n            })}\r\n          </ul>\r\n          <div style={{ paddingBottom: 10, paddingTop: 10 }}>\r\n            <b>Moves({selectedPokemon.moves.length})</b>\r\n          </div>\r\n          <div\r\n            style={{\r\n              borderTopStyle: \"solid\",\r\n              borderWidth: 1,\r\n              borderColor: \"rgba(0,0,0,0.125)\",\r\n            }}\r\n          >\r\n            <ul\r\n              className=\"list-inline\"\r\n              style={{\r\n                display: \"grid\",\r\n                gridTemplateColumns: \"repeat(4,1fr)\",\r\n              }}\r\n            >\r\n              {selectedPokemon.moves.map((item, index) => {\r\n                return (\r\n                  <li key={index} className=\"list-group-item\">\r\n                    <b>{index + 1}</b>: {item.move.name}\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default connect(MapStateToProps)(DetailsCard);\r\n",{"ruleId":"106","severity":1,"message":"107","line":29,"column":7,"nodeType":"108","messageId":"109","endLine":29,"endColumn":19},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":52,"column":31,"nodeType":"116","messageId":"117","endLine":52,"endColumn":32,"suggestions":"118"},{"ruleId":"114","severity":1,"message":"115","line":52,"column":56,"nodeType":"116","messageId":"117","endLine":52,"endColumn":57,"suggestions":"119"},{"ruleId":"120","severity":1,"message":"121","line":7,"column":1,"nodeType":"122","endLine":12,"endColumn":6},{"ruleId":"106","severity":1,"message":"123","line":5,"column":9,"nodeType":"108","messageId":"109","endLine":5,"endColumn":16},{"ruleId":"110","replacedBy":"124"},{"ruleId":"112","replacedBy":"125"},{"ruleId":"106","severity":1,"message":"126","line":1,"column":10,"nodeType":"108","messageId":"109","endLine":1,"endColumn":14},{"ruleId":"106","severity":1,"message":"127","line":14,"column":20,"nodeType":"108","messageId":"109","endLine":14,"endColumn":25},{"ruleId":"128","severity":1,"message":"129","line":24,"column":25,"nodeType":"130","messageId":"131","endLine":24,"endColumn":27},{"ruleId":"132","severity":1,"message":"133","line":51,"column":9,"nodeType":"134","endLine":62,"endColumn":11},{"ruleId":"128","severity":1,"message":"129","line":53,"column":44,"nodeType":"130","messageId":"131","endLine":53,"endColumn":46},{"ruleId":"106","severity":1,"message":"135","line":1,"column":8,"nodeType":"108","messageId":"109","endLine":1,"endColumn":13},{"ruleId":"106","severity":1,"message":"136","line":1,"column":8,"nodeType":"108","messageId":"109","endLine":1,"endColumn":16},{"ruleId":"128","severity":1,"message":"129","line":36,"column":38,"nodeType":"130","messageId":"131","endLine":36,"endColumn":40},{"ruleId":"106","severity":1,"message":"137","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":23},{"ruleId":"128","severity":1,"message":"138","line":15,"column":21,"nodeType":"130","messageId":"131","endLine":15,"endColumn":23},{"ruleId":"132","severity":1,"message":"133","line":44,"column":11,"nodeType":"134","endLine":48,"endColumn":13},"@typescript-eslint/no-unused-vars","'windowResize' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["141","142"],["143","144"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'History' is defined but never used.",["139"],["140"],"'Card' is defined but never used.","'index' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'axios' is defined but never used.","'ReactDOM' is defined but never used.","'useRef' is defined but never used.","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"messageId":"145","fix":"146","desc":"147"},{"messageId":"148","fix":"149","desc":"150"},{"messageId":"145","fix":"151","desc":"147"},{"messageId":"148","fix":"152","desc":"150"},"removeEscape",{"range":"153","text":"154"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"155","text":"156"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"157","text":"154"},{"range":"158","text":"156"},[1307,1308],"",[1307,1307],"\\",[1332,1333],[1332,1332]]